meanARS<-tapply(popfile$ARS[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmARS<-summary(glm(meanARS~1+meanZ+meanBVS))
lmARS
popfile$E<-popfile$z-popfile$bvs
meanE<-tapply(popfile$E[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE
Z
Z
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-lm(meanZ~1+I(1:length(meanZ)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
meanE<-meanZ-meanBVS
lmARS<-summary(glm(meanARS~1+meanE+meanBVS))
lmARS
Z1<-coef(lmZ)[1]+coef(lmZ)[2]*1
Z50<-coef(lmZ)[1]+coef(lmZ)[2]*50
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
S_Z1_BVS1<-Z1*coef(lmARS)["meanZ",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z1_BVS50<-Z1*coef(lmARS)["meanZ",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS1<-Z50*coef(lmARS)["meanZ",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
S_Z1_BVS1<-Z1*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z1_BVS50<-Z1*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS1<-Z50*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS50<-Z50*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
evol<-0.5*(S_Z1_BVS50-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z50_BVS1)
ecol<-0.5*(S_Z50_BVS1-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z1_BVS50)
evol
ecol
ecol<-0.5*(S_Z50_BVS1-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z1_BVS50)
S_Z1_BVS1<-Z1*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z1_BVS50<-Z1*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS1<-Z50*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS50<-Z50*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
evol<-0.5*(S_Z1_BVS50-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z50_BVS1)
ecol<-0.5*(S_Z50_BVS1-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z1_BVS50)
ecol
evol
setwd(dir="C:/Users/Timothée/Documents/GitHub/Dataset.R/Data/simple")
popfile<-read.table(file="TheDataSetV0.csv",header=T)
popfile$E<-popfile$z-popfile$bvs
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-lm(meanZ~1+I(1:length(meanZ)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
meanE<-meanZ-meanBVS
meanARS<-tapply(popfile$ARS[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmARS<-summary(glm(meanARS~1+meanE+meanBVS))
Z1<-coef(lmZ)[1]+coef(lmZ)[2]*1
Z50<-coef(lmZ)[1]+coef(lmZ)[2]*50
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
S_Z1_BVS1<-Z1*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z1_BVS50<-Z1*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS1<-Z50*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS50<-Z50*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
evol<-0.5*(S_Z1_BVS50-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z50_BVS1)
ecol<-0.5*(S_Z50_BVS1-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z1_BVS50)
evol
ecol
meanE<-meanZ-meanBVS
lmE<-lm(meanE~1+I(1:length(meanE)))
Z1<-coef(lmE)[1]+coef(lmE)[2]*1
Z50<-coef(lmE)[1]+coef(lmE)[2]*50
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
S_Z1_BVS1<-Z1*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z1_BVS50<-Z1*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS1<-Z50*coef(lmARS)["meanE",1]+BVS1*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
S_Z50_BVS50<-Z50*coef(lmARS)["meanE",1]+BVS50*coef(lmARS)["meanBVS",1]+coef(lmARS)["(Intercept)",1]
evol<-0.5*(S_Z1_BVS50-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z50_BVS1)
ecol<-0.5*(S_Z50_BVS1-S_Z1_BVS1)+0.5*(S_Z50_BVS50-S_Z1_BVS50)
ecol
evol
var(popfile$bvs)
LeprechaunSimul(PlasticityBirthSize = 10,InitialPopSize = 100,MeanRepro = 4,StudyLength = 10)
setwd(dir="/GitHub/Dataset.R")
setwd(dir="C:/Users/Timothée/Documents/GitHub/Dataset.R/")
LeprechaunSimul(PlasticityBirthSize = 10,InitialPopSize = 100,MeanRepro = 4,StudyLength = 10)
popfile<-read.table(file="data/simple/largeplasticity.csv",header=T)
plot(Camemberts,popSize)
popSize<-tapply(X=popfile$ID[which(popfile$phi==1)],INDEX=popfile$t[which(popfile$phi==1)],FUN=length)#retrieve the end of year pop sizes
popsize<-table(popfile$t)
plot(popsize)
popfile<-read.table(file="data/simple/largeplasticity.csv",header=T)
popfile<-read.table(file="data/simple/largeplasticity.csv",header=T)
var(popfile$bvs)
var(popfile$z[which(popfile$age==0)])
var(popfile$z[which(popfile$age==0 & popfile$t==1)])
var(popfile$z[which(popfile$age==0 & popfile$t==0)])
var(popfile$z[which(popfile$age==0 & popfile$t==1)])
var(popfile$z[which(popfile$age==0 & popfile$t==2)])
var(popfile$z[which(popfile$age==0 & popfile$t==3)])
var(popfile$z[which(popfile$age==0 & popfile$t==4)])
var(popfile$z[which(popfile$age==0 & popfile$t==1)])
var(popfile$bvs[which(popfile$age==0 & popfile$t==1)])
var(popfile$z[which(popfile$age==0 & popfile$t==1)])
var(popfile$bvs[which(popfile$age==0 & popfile$t==2)])
var(popfile$z[which(popfile$age==0 & popfile$t==2)])
setwd(dir="C:/Users/Timothée/Documents/GitHub/Dataset.R/Data/simple")
popfile<-read.table(file="TheDataSetV0.csv",header=T)
popfile$E<-popfile$z-popfile$bvs
meanP<-tapply(popfile$z[which(popfile$phi==1 & popfile$age==0)],INDEX = popfile$t[which(popfile$phi==1 & popfile$age==0)],FUN = mean)
meanP
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1& popfile$age==0)],INDEX = popfile$t[which(popfile$phi==1& popfile$age==0)],FUN = mean)
meanBVS
meanE<-meanP-meanBVS
meanE
popfile$growth<-NA
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & popfile$age==0)]
}
i
popfile$z[which(popfile$ID==IDS[i] & popfile$age==0)]
popfile$z[which(popfile$ID==IDS[i])]
popfile$age[which(popfile$ID==IDS[i])]
popfile[which(popfile$ID==IDS[i]),]
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1)]
}
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1)]
popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1)]
popfile$ID==IDS[i]
popfile$age==0 | popfile$t==1
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1))]
}
i
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1))]
}
popfile$birthSize
summary(popfile$birthSize)
(1/3) * (diag(2) + matrix(1, 2, 2))
lmP<-lm(meanP~1+I(1:length(meanP)))
lmP
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmBVS
lmE<-lm(meanE~1+I(1:length(meanE)))
lmE
lmP
setwd(dir="C:/Users/Timothée/Documents/GitHub/Dataset.R/Data/simple")
popfile<-read.table(file="TheDataSetV0.csv",header=T)
popfile$birthSize<-NA
IDS<-unique(popfile$ID)
for (i in 1:length(IDS))
{
popfile$birthSize[which(popfile$ID==IDS[i])]<-popfile$z[which(popfile$ID==IDS[i] & (popfile$age==0 | popfile$t==1))]
}
meanP<-tapply(popfile$birthSize[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
meanP
meanBVS
meanE
lmP<-lm(meanP~1+I(1:length(meanP)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmE<-lm(meanE~1+I(1:length(meanE)))
lmP
lmBVS
lmE
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanZ
lmARS<-summary(glm(meanz~1+meanE+meanBVS))
lmARS<-summary(glm(meanZ~1+meanE+meanBVS))
lmZ<-summary(glm(meanZ~1+meanE+meanBVS))
lmZ
E1<-coef(lmE)[1]+coef(lmE)[2]*1
length(meanE)
E1<-coef(lmE)[1]+coef(lmE)[2]*1
E50<-coef(lmE)[1]+coef(lmE)[2]*50
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS))
E50<-coef(lmE)[1]+coef(lmE)[2]*50
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
S_E1_BVS1<-E1*coef(lmZ)["meanE",1]+BVS1*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
S_E1_BVS50<-E1*coef(lmZ)["meanE",1]+BVS50*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
S_E50_BVS1<-E50*coef(lmZ)["meanE",1]+BVS1*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
E1<-coef(lmE)[1]+coef(lmE)[2]*1
S_E50_BVS50<-E50*coef(lmZ)["meanE",1]+BVS50*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
evol<-0.5*(S_E1_BVS50-S_E1_BVS1)+0.5*(S_E50_BVS50-S_E50_BVS1)
ecol<-0.5*(S_E50_BVS1-S_E1_BVS1)+0.5*(S_E50_BVS50-S_E1_BVS50)
evol
ecol
popfile$Growth<-NA
nu<-10
V<-diag(4) rIW(V, nu, fix=2)
library(MCMCglmm)
nu<-10
V<-diag(4) rIW(V, nu, fix=2)
V<-diag(4)
rIW(V, nu, fix=2)
rIW(V, nu, fix=2)
rIW(V, nu, fix=3)
i=1
popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i])]
is.null(popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i])])
is.null(which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i]))
which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i])
nrow(which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i]))
is.null(nrow(which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i])))
popfile$Growth<-NA
for (i in 1:nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]
if(!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t+1)==popfile$t[i])])))
{
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
hist(popfile$Growth)
summary(popfile$Growth)
popfile$Growth<-NA
for (i in 1:nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]
if(!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==(popfile$t[i]))])))
{
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
popfile$Growth<-NA
for (i in 1:nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]-1
if(!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==time)])))
{
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
summary(popfile$Growth)
i
for (i in 1:60
)
{
Zt<-popfile$z[i]
time<-popfile$t[i]-1
if(!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==time)])))
{
print("ge")
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
summary(popfile$Growth)
popfile$Growth[i]
popfile$Growth[i]<-1
popfile$Growth[i]
popfile$ID==popfile$ID[i]
!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==time)]))
!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==time)]))
!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==time+1)]))
!is.null(nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==popfile$t[i])]))
nrow(popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==popfile$t[i])])
popfile$z[which(popfile$ID==popfile$ID[i] & popfile$t==popfile$t[i])]
!is.null(nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==popfile$t[i]),]))
popfile$Growth<-NA
for (i in 1:60nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]-1
if(!is.null(nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),])))
{
print("ge")
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
summary(popfile$Growth)
i
for (i in 1:nrow(popfile))
popfile$Growth<-NA
for (i in 1:nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]-1
if(!is.null(nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),])))
{
print("ge")
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
}
}
summary(popfile$Growth)
plot(popfile$Growth)
head(popfile)
View(popfile)
popfile$Growth<-NA
i=1
Zt<-popfile$z[i]
Zt
time<-popfile$t[i]-1
time
!is.null(nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),]))
popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),]
nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),])>0
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t-1)==popfile$t[i])]
popfile$Growth[i]<-Zt-Ztt
Ztt
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t)==time)]
Ztt
popfile$Growth[i]<-Zt-Ztt
popfile$Growth<-NA
for (i in 1:nrow(popfile))
{
Zt<-popfile$z[i]
time<-popfile$t[i]-1
if(nrow(popfile[which(popfile$ID==popfile$ID[i] & popfile$t==time),])>0)
{
Ztt<-popfile$z[which(popfile$ID==popfile$ID[i] & (popfile$t)==time)]
popfile$Growth[i]<-Zt-Ztt
}
}
View(popfile)
meanP<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanP
meanP<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
lmP<-lm(meanP~1+I(1:length(meanP)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmE<-lm(meanE~1+I(1:length(meanE)))
lmP
lmBVS
lmE
meanE<-meanP
lmE<-lm(meanE~1+I(1:length(meanE)))
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS))
meanZ
lmZ<-summary(glm(meanZ~1+meanE+meanBVS))
lmZ
E1<-coef(lmE)[1]+coef(lmE)[2]*1
E50<-coef(lmE)[1]+coef(lmE)[2]*50
BVS1<-coef(lmBVS)[1]+coef(lmBVS)[2]*1
BVS50<-coef(lmBVS)[1]+coef(lmBVS)[2]*50
S_E1_BVS1<-E1*coef(lmZ)["meanE",1]+BVS1*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
S_E1_BVS50<-E1*coef(lmZ)["meanE",1]+BVS50*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
S_E50_BVS1<-E50*coef(lmZ)["meanE",1]+BVS1*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
S_E50_BVS50<-E50*coef(lmZ)["meanE",1]+BVS50*coef(lmZ)["meanBVS",1]+coef(lmZ)["(Intercept)",1]
evol<-0.5*(S_E1_BVS50-S_E1_BVS1)+0.5*(S_E50_BVS50-S_E50_BVS1)
ecol<-0.5*(S_E50_BVS1-S_E1_BVS1)+0.5*(S_E50_BVS50-S_E1_BVS50)
evol
ecol
meanP<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
lmP<-lm(meanP~1+I(1:length(meanP)))
lmG<-lm(meanG~1+I(1:length(meanG)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmE<-lm(meanE~1+I(1:length(meanE)))
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS+meanG))
lmZ
meanG
meanZ
meanE
meanBVS
sum(meanE+meanG+meanBVS)
sum(meanE[-1]+meanG[-1]+meanBVS[-1])
(meanE[-1]%+%meanG[-1]%+%meanBVS[-1])
meanE[-1]+meanG[-1]+meanBVS[-1]
meanE[-1]+meanG[-1]+meanBVS[-1]-meanZ[-1]
lmZ<-summary(glm(meanZ~1+meanE+meanBVS+meanG))
lmZ
meanE[-1]
meanG[-1]
meanZ[-1]
meanBVS[-1]
meanE[-1]-meanG[-1]+meanBVS[-1]-meanZ[-1]
meanE[-1]+meanG[-1]+meanBVS[-1]-meanZ[-1]
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
lmP<-lm(meanP~1+I(1:length(meanP)))
lmG<-lm(meanG~1+I(1:length(meanG)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmE<-lm(meanE~1+I(1:length(meanE)))
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS+meanG))
lmZ
summary(glm(meanZ~1+meanE+meanBVS))
summary(glm(meanZ~1+meanE))
meanE+
summary(glm(meanZ~1+meanBVS))
meanZ
plot(meanZ,meanBVS)
plot(meanZ,meanE)
plot(meanZ,meanE,meanBVS)
plot(meanZ,meanG)
plot(meanZ,meanE)
popfile$z[which(popfile$phi==1)]
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
plot(meanBVS,meanG)
plot(meanE,meanG)
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
lmP<-lm(meanP~1+I(1:length(meanP)))
lmG<-lm(meanG~1+I(1:length(meanG)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmE<-lm(meanE~1+I(1:length(meanE)))
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS+meanG))
meanE[-1]+meanG[-1]+meanBVS[-1]-meanZ[-1]
summary(glm(meanZ~1+meanBVS))
E1<-coef(lmE)[1]+coef(lmE)[2]*1
E50<-coef(lmE)[1]+coef(lmE)[2]*50
lmZ
meanP<-tapply(popfile$birthSize[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
meanE<-meanP-meanBVS
meanG<-tapply(popfile$Growth[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanP<-tapply(popfile$birthSize[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = function(x){mean(x,na.rm=T)})
meanE<-meanP-meanBVS
lmG<-lm(meanG~1+I(1:length(meanG)))
lmBVS<-lm(meanBVS~1+I(1:length(meanBVS)))
lmP<-lm(meanP~1+I(1:length(meanP)))
meanBVS<-tapply(popfile$bvs[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmE<-lm(meanE~1+I(1:length(meanE)))
meanZ<-tapply(popfile$z[which(popfile$phi==1)],INDEX = popfile$t[which(popfile$phi==1)],FUN = mean)
lmZ<-summary(glm(meanZ~1+meanE+meanBVS+meanG))
lmZ
rm(list=ls())
setwd("/home/koen/Dropbox/Decomposing pop dynamics/Koen/Coulson_Tulja_Sim")
dat<-read.table(file="TheDataSetV0.csv",header=T)
dat<-subset(dat,phi==1)
frame<-aggregate(dat$z,by=list(dat$t),mean)
colnames(frame)<-c('t','z')
frame$a<-aggregate(dat$bvs,by=list(dat$t),mean)[,2]
whereis<-function(x){
if(x %in% dat$ID){
return(min(which(dat$ID==x)))
}else{
return(NA)
}
}
indices<-sapply(1:max(dat$ID),whereis)
dat$bw<-dat$z[indices[dat$ID]]
frame$bw<-aggregate(dat$bw,by=list(dat$t),mean)[,2]
frame$e<-frame$bw-frame$a
model_bw<-lm(bw~t,data=frame)
model_a<-lm(a~t,data=frame)
a<-function(t){
predict(model_a,newdata=list(t=t),type="response")
}
e<-function(t){
predict(model_bw,newdata=list(t=t),type="response")-a(t)
}
# Growth since last timestep
dat$GR<-NA
for(i in 1:length(dat$t)){
indi<-(dat$ID==dat$ID[i] & dat$t==(dat$t[i]-1))
if(sum(indi)==1){
dat$GR[i]<-dat$z[i]-dat$z[indi]
}else if(sum(indi)>1){
warning("oops")
}
}
frame$GR<-aggregate(dat$GR,by=list(dat$t),mean,na.rm=TRUE)[,2]
model_c<-lm(GR~t,data=frame)
model_z<-lm(z~a+e+GR,data=frame)
k<-function(t){
predict(model_c,newdata=list(t=t),type="response")
}
z<-function(a,e,c){
predict(model_z,newdata=list(a=a,e=e,GR=c),type="response")
}
framepje<-expand.grid(ai=c(0,1),ei=c(0,1),ci=c(0,1))
framepje$a<-a(49*framepje$ai+1)
framepje$e<-e(49*framepje$ei+1)
framepje$k<-k(49*framepje$ci+1)
framepje$z<-z(framepje$a,framepje$e,framepje$k)
lm(z~ai+ei+ci,data=framepje)
