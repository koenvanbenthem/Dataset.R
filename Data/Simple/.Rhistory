blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
lx<-seq(0.2,0.4,0.001)
ly<-1.4*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
plot(bl,ylim=c(-1,1))
x<-seq(0,1,0.001)
branch<-cbind(x,0)
lx<-seq(0.75,0.9,0.001)
ly<-lx-0.75
leave<-cbind(lx,ly)
leavel<-cbind(lx,-ly)
lx<-seq(0.2,0.4,0.001)
ly<-1.4*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
plot(bl,ylim=c(-1,1))
blr<-as.matrix(bl)
bll<-bl%*%matrix(data = c(-1,0,0,1),nrow = 2)
blu<-bl%*%matrix(data = c(0,-1,1,0),nrow = 2)
bld<-bl%*%matrix(data = c(0,1,-1,0),nrow = 2)
cross<-rbind(bll,blr)
theta<-2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-rbind(bll,blr)%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-rbind(bll,blr)%*%R
skeleton<-rbind(rotation,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
pdf(file = "flake.pdf")
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
dev.off()
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
x<-seq(0,1,0.001)
branch<-cbind(x,0)
lx<-seq(0.75,0.9,0.001)
ly<-lx-0.75
leave<-cbind(lx,ly)
leavel<-cbind(lx,-ly)
lx<-seq(0.2,0.4,0.001)
ly<-1*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
plot(bl,ylim=c(-1,1))
blr<-as.matrix(bl)
bll<-bl%*%matrix(data = c(-1,0,0,1),nrow = 2)
blu<-bl%*%matrix(data = c(0,-1,1,0),nrow = 2)
bld<-bl%*%matrix(data = c(0,1,-1,0),nrow = 2)
cross<-rbind(bll,blr)
theta<-2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-rbind(bll,blr)%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-rbind(bll,blr)%*%R
skeleton<-rbind(rotation,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
plot(cross)
theta<-2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation,cross,rotation2)
plot(skeleton)
pdf(file = "flake.pdf")
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
pdf(file = "flake.pdf")
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
dev.off()
theta<- pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
theta<- -2pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
theta<- pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
skeleton<-rbind(rotation1,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
theta<- 2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation1,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
ly<-1.2*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
plot(bl,ylim=c(-1,1))
blr<-as.matrix(bl)
bll<-bl%*%matrix(data = c(-1,0,0,1),nrow = 2)
blu<-bl%*%matrix(data = c(0,-1,1,0),nrow = 2)
bld<-bl%*%matrix(data = c(0,1,-1,0),nrow = 2)
cross<-rbind(bll,blr)
theta<- 2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation1,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
source('C:/Users/Timothée/Dropbox/MakeAFlake.R', echo=TRUE)
lx<-seq(0.2,0.3,0.001)
ly<-1.2*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
plot(bl,ylim=c(-1,1))
blr<-as.matrix(bl)
bll<-bl%*%matrix(data = c(-1,0,0,1),nrow = 2)
blu<-bl%*%matrix(data = c(0,-1,1,0),nrow = 2)
bld<-bl%*%matrix(data = c(0,1,-1,0),nrow = 2)
cross<-rbind(bll,blr)
theta<- 2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation1,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
ly<-1.5*(lx-0.2)
root<-cbind(lx,ly)
rootl<-cbind(lx,-ly)
bl<-rbind(branch,leave,leavel,root,rootl)
blr<-as.matrix(bl)
plot(bl,ylim=c(-1,1))
bll<-bl%*%matrix(data = c(-1,0,0,1),nrow = 2)
blu<-bl%*%matrix(data = c(0,-1,1,0),nrow = 2)
bld<-bl%*%matrix(data = c(0,1,-1,0),nrow = 2)
cross<-rbind(bll,blr)
theta<- 2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation1<-cross%*%R
theta<- -2*pi/3
R<-matrix(data = c(cos(theta),-sin(theta),sin(theta),cos(theta)),nrow = 2)
rotation2<-cross%*%R
skeleton<-rbind(rotation1,cross,rotation2)
blur<-apply(X = skeleton,MARGIN = 2,FUN = function(x){x[which(abs(x)<0.9)]-0.01})
blur<-as.data.frame(skeleton)
blur$col<-1-sqrt(blur$x^2+blur$V2^2)
plot(blur$x,blur$V2,cex=1+blur$col,axes=F,xlab="",ylab="",main="",col=rgb(0,0,0.9,0.05))
pdf(file = "flake.pdf")
source('C:/Users/Timothée/Dropbox/MakeAFlake.R', echo=TRUE)
source('C:/Users/Timothée/Dropbox/MakeAFlake.R', echo=TRUE)
source('C:/Users/Timothée/Dropbox/MakeAFlake.R', echo=TRUE)
source('C:/Users/Timothée/Dropbox/MakeAFlake.R', echo=TRUE)
library("sequences")
gccount
gccountr <- function(x) table(strsplit(x, "")[[1]])
gccountr2 <- function(x) tabulate(factor(strsplit(x, "")[[1]]))
s <- paste(sample(c("A", "C", "G", "T"),
100, replace = TRUE),
collapse = "")
gccount(s)
(s)
gccountr2(s)
system.time(replicate(1000,gccountr(s)))
system.time(replicate(1000,gccountr2(s)))
library("microbenchmark")
mb <- microbenchmark(gccount(s),
gccountr(s),
gccountr2(s),
times = 1e4)
print(mb)
sourceCpp("./src/ex_sumC.cpp")
rowSumsC(matrix(data = c(0,1,2,3),nrow = 2))
print(mb)
library(MCMCglmm)
install.packages(MCMCglmm)
install.packages(pkgs = "MCMCglmm")
NumberInd<-40
MeanNumberMeasurments<-2
NumberRuns<-3
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments*NumberRuns)
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments*NumberRuns+0.1)+1
MeanNumberMeasurments<-1.5
NumberRuns<-3
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments*NumberRuns)+1
MeasurementsInd
sum(MeasurementsInd)
respiro<-data.frame(matrix(data = NA,nrow = sum(MeasurementsInd),ncol = 2))
names(respiro)
respiro<-data.frame(matrix(data = NA,nrow = sum(MeasurementsInd),ncol = 3))
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
respiro<-data.frame(matrix(data = NA,nrow = sum(MeasurementsInd),ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$ID
respiro$Date<- sample(x = c("A","B","C","D"),size = sum(MeasurementsInd))
respiro$Date<- sample(x = c("A","B","C","D"),size = sum(MeasurementsInd),replace=TRUE)
respiro$Date
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rnorm(n = MeasurementsInd[i],mean = 0,sd = sqrt(0.8))
}
respiro$VO2
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(MeasurementsInd[i],rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))
}
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))
}
respiro$VO2
respiro$Date<- sample(x = 1:5,size = nbobs,replace=TRUE)
nbobs<-sum(MeasurementsInd)
respiro$Date<- sample(x = 1:5,size = nbobs,replace=TRUE)
respiro$Date
NbDate<-5
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
respiro$VO2
library(lme4)
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
sqrt(0.3)
NbDate<-10
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
nbobs<-sum(MeasurementsInd)
respiro<-data.frame(matrix(data = 0,nrow =nbobs ,ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$Date<- sample(x = 1:NbDate,size = nbobs,replace=TRUE)
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
set.seed(12)
set.seed(42)
NumberInd<-40
MeanNumberMeasurments<-2
NbDate<-10
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
nbobs<-sum(MeasurementsInd)
respiro<-data.frame(matrix(data = 0,nrow =nbobs ,ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$Date<- sample(x = 1:NbDate,size = nbobs,replace=TRUE)
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
set.seed(42)
set.seed(42)
NumberInd<-40
MeanNumberMeasurments<-2
NbDate<-10
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
nbobs<-sum(MeasurementsInd)
respiro<-data.frame(matrix(data = 0,nrow =nbobs ,ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$Date<- sample(x = 1:NbDate,size = nbobs,replace=TRUE)
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
set.seed(11)
NumberInd<-40
MeanNumberMeasurments<-2
NbDate<-10
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
nbobs<-sum(MeasurementsInd)
respiro<-data.frame(matrix(data = 0,nrow =nbobs ,ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$Date<- sample(x = 1:NbDate,size = nbobs,replace=TRUE)
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
NumberInd<-45
MeanNumberMeasurments<-3
NbDate<-10
MeasurementsInd<-rpois(n = NumberInd,lambda = MeanNumberMeasurments)+1
nbobs<-sum(MeasurementsInd)
respiro<-data.frame(matrix(data = 0,nrow =nbobs ,ncol = 3))
names(respiro)<-c("Date","ID","VO2")
respiro$ID<-rep(x = 1:NumberInd,times = MeasurementsInd)
respiro$Date<- sample(x = 1:NbDate,size = nbobs,replace=TRUE)
DateEffect<-rnorm(n = NbDate,mean = 0,sd = sqrt(0.15))
for (i in 1:NumberInd)
{
respiro$VO2[which(respiro$ID==i)]<-rep(times = MeasurementsInd[i],x=rnorm(n =1 ,mean = 0,sd = sqrt(0.8)))+
rnorm(n=MeasurementsInd[i],mean = 0,sd = sqrt(0.3))+
DateEffect[respiro$Date[i]]
}
lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
m0<-lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
library(MCMCglmm)
m1<-MCMCglmm(fixed = V02~1,
random=~ID+Date,
data=respiro)
m1<-MCMCglmm(fixed = VO2~1,
random=~ID+Date,
data=respiro)
summary(m1)
getME(object = m0,name = u)
getME(object = m0,name = "u")
getME(object = m0,name = "theta")
summary(m0)
getME(object = m0,name = "theta")["ID.(Intercept)"]
getME(object = m0,name = "sigma")
getME(object = m0,name = "theta")["ID.(Intercept)"]/(getME(object = m0,name = "theta")["ID.(Intercept)"]+getME(object = m0,name = "sigma"))
1.7/(1.7+0.6)
getME(object = m0,name = "theta")["ID.(Intercept)"]^2/(getME(object = m0,name = "theta")["ID.(Intercept)"]^2+getME(object = m0,name = "sigma")^2)
0.97/(0.97+0.3)
getME(object = m0,name = "sigma")
summary(m0)
sigma(m0)
getME(object = m0,name = "theta")["ID.(Intercept)"]^2
summary(m0)
(getME(object = m0,name = "theta")["ID.(Intercept)"])
(getME(object = m0,name = "theta")
)
summary(m0)
getME(object = m0,name = "theta")["ID.(Intercept)"])^2
getME(object = m0,name = "theta")["ID.(Intercept)"]^2
getME(object = m0,name = "theta")["ID.(Intercept)"]^2
getME(object = m0,name = "theta")
m0<-lmer(VO2~1+(1|ID)+(1|Date),data=respiro)
summary(m0)
getME(object = m0,name = "theta")
getME(object = m0,name = "Z")
ranef(m0)
vcov(m0)
summary(m0)
getME(object = m0,name = "theta")
m0@theta
m0@u
m0@resp
VarCorr(m0)
VarCorr(m0,"Variance")
print(VarCorr(m0),"Variance")
print(VarCorr(m0),comp="Variance")
varcomp<-print(VarCorr(m0),comp="Variance")
repeatability<-varcomp[1]/sum(varcomp[c(1,3)])
repeatability<-varcomp[1,"Variance"]/sum(varcomp[c(1,3),"Variance"])
str(varcomp)
varcomp$ID
varcomp$ID[1]
repeatability<-varcomp$ID[1]/(varcomp$ID[1]+ varcomp$Date[1])
repeatability
sigma(m0)^2
(repeatability<-varcomp$ID[1]/(varcomp$ID[1]+ sigma(m0)^2))
str(m1$VCV)
repeatability<-m1$VCV["ID"]/(m1$VCV["ID"]+m1$VCV["units"])
plot(repeatability)
repeatability<-m1$VCV["ID"]/(m1$VCV["ID"]+m1$VCV["units"])
repeatability
repeatability<-m1$VCV[,"ID"]/(m1$VCV[,"ID"]+m1$VCV[,"units"])
plot(repeatability)
posterior.mode(repeatability)
HPDinterval(repeatability)
prior<-list(G = list(G1 = list(V = 1, nu = 0.002),G2 = list(V = 1, nu = 0.002)), R = list(V = 1,nu = 0.002))
prior2<-list(G = list(G1 = list(V = 1, nu = 0.002),G2 = list(V = 1, nu = 0.002)), R = list(V = 1,nu = 0.002))
m2<-MCMCglmm(fixed = VO2~1,
random=~ID+Date,
data=respiro, prior=prior2)
m2<-MCMCglmm(fixed = VO2~1,
random=~ID+Date,
data=respiro, prior=prior2,
verbose = TRUE ,nitt = 25000, thin = 20, burnin = 5000)
summary(m2)
require(MCMCglmm)
setwd(dir="C:/Users/Timothée/Documents/GitHub/Dataset.R/Data/simple")
dat <- read.csv(paste(filestem,'TheDataSetV0.csv',sep=''),sep='\t')
dat<-read.table(file="TheDataSetV0.csv",header=T)
dat$p1 <- as.numeric(as.character(dat$p1))
dat$p2 <- as.numeric(as.character(dat$p2))
dat$animal <- as.factor(dat$ID)
# Create two new datasets (phenotypic data and pedigree data)
# Birth weight of individuals
exl <- dat$ID [dat$t==1 & is.na(dat$p1)]
tmp <- dat[(dat$ID %in% exl) ==F,] # exclude animals that were there in first timestep
datInd <- data.frame(
animal = unique(tmp$animal),
birthweight = tmp$z[duplicated(tmp$animal)==F],
mother = tmp$p1[duplicated(tmp$animal)==F],
father = tmp$p2[duplicated(tmp$animal)==F],
sex = tmp$s[duplicated(tmp$animal)==F],
C = tmp$C[duplicated(tmp$animal)==F],
t = tmp$t[duplicated(tmp$animal)==F]
)
aa <- tapply(dat$ARS,dat$ID,sum)
tmp <- data.frame(animal=names(aa),R=as.numeric(aa))
datInd <- merge(datInd,tmp,by.x='animal')
datInd$animal <- as.factor(datInd$animal)
meantR<-tapply(datInd$R,INDEX = datInd$t,mean)
datInd$Rrelative<-0
for (time in 1:48)
{
datInd$Rrelative[which(datInd$t==time)]<-datInd$R[which(datInd$t==time)]/meantR[time]
}
datPedi <- data.frame(
animal=unique(dat$ID),
mother=as.vector(tapply(dat$p1,dat$ID,function(x) x[1])),
father=as.vector(tapply(dat$p2,dat$ID,function(x) x[1]))
)
datPedi$mother <- as.factor(datPedi$mother)
datPedi$father <- as.factor(datPedi$father)
datPedi$animal <- as.factor(datPedi$animal)
#############################
## MCMC glmm Settings #######
nitt <- 50000
thin <- 50
burnin <- 3000
varP <- var(datInd$birthweight)
# Priors for different number of random factors (all univariate)
prior1 <- list(
G=list(
G1=list(V=matrix(varP/2),n=1)),
R=list(V=matrix(varP/2),n=1))
prior2<-list(
G=list(
G2=list(V=matrix(varP/3),n=1)),
R=list(V=matrix(varP/3),n=1))
G1=list(V=matrix(varP/3),n=1),
prior3<-list(
prior1 <- list(
G=list(
G1=list(V=matrix(varP/2),n=1)),
R=list(V=matrix(varP/2),n=1))
prior1 <- list(
G=list(
G1=list(V=matrix(varP/2),n=1)),
R=list(V=matrix(varP/2),n=1))
prior2<-list(
G=list(
G1=list(V=matrix(varP/3),n=1),
G2=list(V=matrix(varP/3),n=1)),
R=list(V=matrix(varP/3),n=1))
prior3<-list(
G=list(
G1=list(V=matrix(varP/4),n=1),
G2=list(V=matrix(varP/4),n=1),
G3=list(V=matrix(varP/4),n=1)),
R=list(V=matrix(varP/4),n=1))
model1<-MCMCglmm(birthweight~1+t,random=~animal,pedigree=datPedi,data=datInd,prior=prior1,
nitt=13000,thin=10,burnin=3000,verbose=FALSE,pr=TRUE,pl=TRUE)
summary(model1)
sm1<-summary(model1)
